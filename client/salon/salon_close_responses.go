// Code generated by go-swagger; DO NOT EDIT.

package salon

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"shutter/models"
)

// SalonCloseReader is a Reader for the SalonClose structure.
type SalonCloseReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SalonCloseReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSalonCloseOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSalonCloseBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSalonCloseInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSalonCloseOK creates a SalonCloseOK with default headers values
func NewSalonCloseOK() *SalonCloseOK {
	return &SalonCloseOK{}
}

/* SalonCloseOK describes a response with status code 200, with default header values.

Successful Close
*/
type SalonCloseOK struct {
	Payload *models.Success
}

func (o *SalonCloseOK) Error() string {
	return fmt.Sprintf("[POST /salon/close][%d] salonCloseOK  %+v", 200, o.Payload)
}
func (o *SalonCloseOK) GetPayload() *models.Success {
	return o.Payload
}

func (o *SalonCloseOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Success)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSalonCloseBadRequest creates a SalonCloseBadRequest with default headers values
func NewSalonCloseBadRequest() *SalonCloseBadRequest {
	return &SalonCloseBadRequest{}
}

/* SalonCloseBadRequest describes a response with status code 400, with default header values.

Error
*/
type SalonCloseBadRequest struct {
	Payload *models.Error
}

func (o *SalonCloseBadRequest) Error() string {
	return fmt.Sprintf("[POST /salon/close][%d] salonCloseBadRequest  %+v", 400, o.Payload)
}
func (o *SalonCloseBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *SalonCloseBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSalonCloseInternalServerError creates a SalonCloseInternalServerError with default headers values
func NewSalonCloseInternalServerError() *SalonCloseInternalServerError {
	return &SalonCloseInternalServerError{}
}

/* SalonCloseInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type SalonCloseInternalServerError struct {
	Payload *models.ServerError
}

func (o *SalonCloseInternalServerError) Error() string {
	return fmt.Sprintf("[POST /salon/close][%d] salonCloseInternalServerError  %+v", 500, o.Payload)
}
func (o *SalonCloseInternalServerError) GetPayload() *models.ServerError {
	return o.Payload
}

func (o *SalonCloseInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
