// Code generated by go-swagger; DO NOT EDIT.

package salon

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"shutter/models"
)

// SalonOpenReader is a Reader for the SalonOpen structure.
type SalonOpenReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SalonOpenReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSalonOpenOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSalonOpenBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSalonOpenInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSalonOpenOK creates a SalonOpenOK with default headers values
func NewSalonOpenOK() *SalonOpenOK {
	return &SalonOpenOK{}
}

/* SalonOpenOK describes a response with status code 200, with default header values.

Successful Open
*/
type SalonOpenOK struct {
	Payload *models.Success
}

func (o *SalonOpenOK) Error() string {
	return fmt.Sprintf("[POST /salon/open][%d] salonOpenOK  %+v", 200, o.Payload)
}
func (o *SalonOpenOK) GetPayload() *models.Success {
	return o.Payload
}

func (o *SalonOpenOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Success)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSalonOpenBadRequest creates a SalonOpenBadRequest with default headers values
func NewSalonOpenBadRequest() *SalonOpenBadRequest {
	return &SalonOpenBadRequest{}
}

/* SalonOpenBadRequest describes a response with status code 400, with default header values.

Error
*/
type SalonOpenBadRequest struct {
	Payload *models.Error
}

func (o *SalonOpenBadRequest) Error() string {
	return fmt.Sprintf("[POST /salon/open][%d] salonOpenBadRequest  %+v", 400, o.Payload)
}
func (o *SalonOpenBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *SalonOpenBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSalonOpenInternalServerError creates a SalonOpenInternalServerError with default headers values
func NewSalonOpenInternalServerError() *SalonOpenInternalServerError {
	return &SalonOpenInternalServerError{}
}

/* SalonOpenInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type SalonOpenInternalServerError struct {
	Payload *models.ServerError
}

func (o *SalonOpenInternalServerError) Error() string {
	return fmt.Sprintf("[POST /salon/open][%d] salonOpenInternalServerError  %+v", 500, o.Payload)
}
func (o *SalonOpenInternalServerError) GetPayload() *models.ServerError {
	return o.Payload
}

func (o *SalonOpenInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
