// Code generated by go-swagger; DO NOT EDIT.

package sdb

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"shutter/models"
)

// SdbStopReader is a Reader for the SdbStop structure.
type SdbStopReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SdbStopReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSdbStopOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSdbStopBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSdbStopInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSdbStopOK creates a SdbStopOK with default headers values
func NewSdbStopOK() *SdbStopOK {
	return &SdbStopOK{}
}

/* SdbStopOK describes a response with status code 200, with default header values.

Successful Stop
*/
type SdbStopOK struct {
	Payload *models.Success
}

func (o *SdbStopOK) Error() string {
	return fmt.Sprintf("[POST /sdb/stop][%d] sdbStopOK  %+v", 200, o.Payload)
}
func (o *SdbStopOK) GetPayload() *models.Success {
	return o.Payload
}

func (o *SdbStopOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Success)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSdbStopBadRequest creates a SdbStopBadRequest with default headers values
func NewSdbStopBadRequest() *SdbStopBadRequest {
	return &SdbStopBadRequest{}
}

/* SdbStopBadRequest describes a response with status code 400, with default header values.

Error
*/
type SdbStopBadRequest struct {
	Payload *models.Error
}

func (o *SdbStopBadRequest) Error() string {
	return fmt.Sprintf("[POST /sdb/stop][%d] sdbStopBadRequest  %+v", 400, o.Payload)
}
func (o *SdbStopBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *SdbStopBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSdbStopInternalServerError creates a SdbStopInternalServerError with default headers values
func NewSdbStopInternalServerError() *SdbStopInternalServerError {
	return &SdbStopInternalServerError{}
}

/* SdbStopInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type SdbStopInternalServerError struct {
	Payload *models.ServerError
}

func (o *SdbStopInternalServerError) Error() string {
	return fmt.Sprintf("[POST /sdb/stop][%d] sdbStopInternalServerError  %+v", 500, o.Payload)
}
func (o *SdbStopInternalServerError) GetPayload() *models.ServerError {
	return o.Payload
}

func (o *SdbStopInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
