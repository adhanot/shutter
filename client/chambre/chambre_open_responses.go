// Code generated by go-swagger; DO NOT EDIT.

package chambre

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"shutter/models"
)

// ChambreOpenReader is a Reader for the ChambreOpen structure.
type ChambreOpenReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ChambreOpenReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewChambreOpenOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewChambreOpenBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewChambreOpenInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewChambreOpenOK creates a ChambreOpenOK with default headers values
func NewChambreOpenOK() *ChambreOpenOK {
	return &ChambreOpenOK{}
}

/* ChambreOpenOK describes a response with status code 200, with default header values.

Successful Stop
*/
type ChambreOpenOK struct {
	Payload *models.Success
}

func (o *ChambreOpenOK) Error() string {
	return fmt.Sprintf("[POST /chambre/open][%d] chambreOpenOK  %+v", 200, o.Payload)
}
func (o *ChambreOpenOK) GetPayload() *models.Success {
	return o.Payload
}

func (o *ChambreOpenOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Success)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewChambreOpenBadRequest creates a ChambreOpenBadRequest with default headers values
func NewChambreOpenBadRequest() *ChambreOpenBadRequest {
	return &ChambreOpenBadRequest{}
}

/* ChambreOpenBadRequest describes a response with status code 400, with default header values.

Error
*/
type ChambreOpenBadRequest struct {
	Payload *models.Error
}

func (o *ChambreOpenBadRequest) Error() string {
	return fmt.Sprintf("[POST /chambre/open][%d] chambreOpenBadRequest  %+v", 400, o.Payload)
}
func (o *ChambreOpenBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ChambreOpenBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewChambreOpenInternalServerError creates a ChambreOpenInternalServerError with default headers values
func NewChambreOpenInternalServerError() *ChambreOpenInternalServerError {
	return &ChambreOpenInternalServerError{}
}

/* ChambreOpenInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type ChambreOpenInternalServerError struct {
	Payload *models.ServerError
}

func (o *ChambreOpenInternalServerError) Error() string {
	return fmt.Sprintf("[POST /chambre/open][%d] chambreOpenInternalServerError  %+v", 500, o.Payload)
}
func (o *ChambreOpenInternalServerError) GetPayload() *models.ServerError {
	return o.Payload
}

func (o *ChambreOpenInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
