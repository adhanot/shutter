// Code generated by entc, DO NOT EDIT.

package ent

import (
	"shutter/gen/ent/v1/schema"
	"shutter/pkg/ent/users"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	usersFields := schema.Users{}.Fields()
	_ = usersFields
	// usersDescPseudo is the schema descriptor for pseudo field.
	usersDescPseudo := usersFields[0].Descriptor()
	// users.PseudoValidator is a validator for the "pseudo" field. It is called by the builders before save.
	users.PseudoValidator = func() func(string) error {
		validators := usersDescPseudo.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(pseudo string) error {
			for _, fn := range fns {
				if err := fn(pseudo); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// usersDescPassword is the schema descriptor for password field.
	usersDescPassword := usersFields[1].Descriptor()
	// users.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	users.PasswordValidator = usersDescPassword.Validators[0].(func(string) error)
	// usersDescFname is the schema descriptor for fname field.
	usersDescFname := usersFields[2].Descriptor()
	// users.FnameValidator is a validator for the "fname" field. It is called by the builders before save.
	users.FnameValidator = usersDescFname.Validators[0].(func(string) error)
	// usersDescLname is the schema descriptor for lname field.
	usersDescLname := usersFields[3].Descriptor()
	// users.LnameValidator is a validator for the "lname" field. It is called by the builders before save.
	users.LnameValidator = usersDescLname.Validators[0].(func(string) error)
	// usersDescEmail is the schema descriptor for email field.
	usersDescEmail := usersFields[4].Descriptor()
	// users.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	users.EmailValidator = usersDescEmail.Validators[0].(func(string) error)
	// usersDescCreatedAt is the schema descriptor for created_at field.
	usersDescCreatedAt := usersFields[5].Descriptor()
	// users.DefaultCreatedAt holds the default value on creation for the created_at field.
	users.DefaultCreatedAt = usersDescCreatedAt.Default.(func() time.Time)
}
