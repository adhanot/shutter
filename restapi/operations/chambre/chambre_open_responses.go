// Code generated by go-swagger; DO NOT EDIT.

package chambre

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"shutter/models"
)

// ChambreOpenOKCode is the HTTP code returned for type ChambreOpenOK
const ChambreOpenOKCode int = 200

/*ChambreOpenOK Successful Stop

swagger:response chambreOpenOK
*/
type ChambreOpenOK struct {

	/*
	  In: Body
	*/
	Payload *models.Success `json:"body,omitempty"`
}

// NewChambreOpenOK creates ChambreOpenOK with default headers values
func NewChambreOpenOK() *ChambreOpenOK {

	return &ChambreOpenOK{}
}

// WithPayload adds the payload to the chambre open o k response
func (o *ChambreOpenOK) WithPayload(payload *models.Success) *ChambreOpenOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the chambre open o k response
func (o *ChambreOpenOK) SetPayload(payload *models.Success) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ChambreOpenOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ChambreOpenBadRequestCode is the HTTP code returned for type ChambreOpenBadRequest
const ChambreOpenBadRequestCode int = 400

/*ChambreOpenBadRequest Error

swagger:response chambreOpenBadRequest
*/
type ChambreOpenBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewChambreOpenBadRequest creates ChambreOpenBadRequest with default headers values
func NewChambreOpenBadRequest() *ChambreOpenBadRequest {

	return &ChambreOpenBadRequest{}
}

// WithPayload adds the payload to the chambre open bad request response
func (o *ChambreOpenBadRequest) WithPayload(payload *models.Error) *ChambreOpenBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the chambre open bad request response
func (o *ChambreOpenBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ChambreOpenBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ChambreOpenInternalServerErrorCode is the HTTP code returned for type ChambreOpenInternalServerError
const ChambreOpenInternalServerErrorCode int = 500

/*ChambreOpenInternalServerError Server error

swagger:response chambreOpenInternalServerError
*/
type ChambreOpenInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ServerError `json:"body,omitempty"`
}

// NewChambreOpenInternalServerError creates ChambreOpenInternalServerError with default headers values
func NewChambreOpenInternalServerError() *ChambreOpenInternalServerError {

	return &ChambreOpenInternalServerError{}
}

// WithPayload adds the payload to the chambre open internal server error response
func (o *ChambreOpenInternalServerError) WithPayload(payload *models.ServerError) *ChambreOpenInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the chambre open internal server error response
func (o *ChambreOpenInternalServerError) SetPayload(payload *models.ServerError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ChambreOpenInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
