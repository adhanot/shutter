// Code generated by go-swagger; DO NOT EDIT.

package chambre

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"shutter/models"
)

// ChambreCloseOKCode is the HTTP code returned for type ChambreCloseOK
const ChambreCloseOKCode int = 200

/*ChambreCloseOK Successful Close

swagger:response chambreCloseOK
*/
type ChambreCloseOK struct {

	/*
	  In: Body
	*/
	Payload *models.Success `json:"body,omitempty"`
}

// NewChambreCloseOK creates ChambreCloseOK with default headers values
func NewChambreCloseOK() *ChambreCloseOK {

	return &ChambreCloseOK{}
}

// WithPayload adds the payload to the chambre close o k response
func (o *ChambreCloseOK) WithPayload(payload *models.Success) *ChambreCloseOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the chambre close o k response
func (o *ChambreCloseOK) SetPayload(payload *models.Success) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ChambreCloseOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ChambreCloseBadRequestCode is the HTTP code returned for type ChambreCloseBadRequest
const ChambreCloseBadRequestCode int = 400

/*ChambreCloseBadRequest Error

swagger:response chambreCloseBadRequest
*/
type ChambreCloseBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewChambreCloseBadRequest creates ChambreCloseBadRequest with default headers values
func NewChambreCloseBadRequest() *ChambreCloseBadRequest {

	return &ChambreCloseBadRequest{}
}

// WithPayload adds the payload to the chambre close bad request response
func (o *ChambreCloseBadRequest) WithPayload(payload *models.Error) *ChambreCloseBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the chambre close bad request response
func (o *ChambreCloseBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ChambreCloseBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ChambreCloseInternalServerErrorCode is the HTTP code returned for type ChambreCloseInternalServerError
const ChambreCloseInternalServerErrorCode int = 500

/*ChambreCloseInternalServerError Server error

swagger:response chambreCloseInternalServerError
*/
type ChambreCloseInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ServerError `json:"body,omitempty"`
}

// NewChambreCloseInternalServerError creates ChambreCloseInternalServerError with default headers values
func NewChambreCloseInternalServerError() *ChambreCloseInternalServerError {

	return &ChambreCloseInternalServerError{}
}

// WithPayload adds the payload to the chambre close internal server error response
func (o *ChambreCloseInternalServerError) WithPayload(payload *models.ServerError) *ChambreCloseInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the chambre close internal server error response
func (o *ChambreCloseInternalServerError) SetPayload(payload *models.ServerError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ChambreCloseInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
