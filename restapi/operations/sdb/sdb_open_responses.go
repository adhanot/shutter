// Code generated by go-swagger; DO NOT EDIT.

package sdb

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"shutter/models"
)

// SdbOpenOKCode is the HTTP code returned for type SdbOpenOK
const SdbOpenOKCode int = 200

/*SdbOpenOK Successful Stop

swagger:response sdbOpenOK
*/
type SdbOpenOK struct {

	/*
	  In: Body
	*/
	Payload *models.Success `json:"body,omitempty"`
}

// NewSdbOpenOK creates SdbOpenOK with default headers values
func NewSdbOpenOK() *SdbOpenOK {

	return &SdbOpenOK{}
}

// WithPayload adds the payload to the sdb open o k response
func (o *SdbOpenOK) WithPayload(payload *models.Success) *SdbOpenOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the sdb open o k response
func (o *SdbOpenOK) SetPayload(payload *models.Success) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SdbOpenOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SdbOpenBadRequestCode is the HTTP code returned for type SdbOpenBadRequest
const SdbOpenBadRequestCode int = 400

/*SdbOpenBadRequest Error

swagger:response sdbOpenBadRequest
*/
type SdbOpenBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewSdbOpenBadRequest creates SdbOpenBadRequest with default headers values
func NewSdbOpenBadRequest() *SdbOpenBadRequest {

	return &SdbOpenBadRequest{}
}

// WithPayload adds the payload to the sdb open bad request response
func (o *SdbOpenBadRequest) WithPayload(payload *models.Error) *SdbOpenBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the sdb open bad request response
func (o *SdbOpenBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SdbOpenBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SdbOpenInternalServerErrorCode is the HTTP code returned for type SdbOpenInternalServerError
const SdbOpenInternalServerErrorCode int = 500

/*SdbOpenInternalServerError Server error

swagger:response sdbOpenInternalServerError
*/
type SdbOpenInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ServerError `json:"body,omitempty"`
}

// NewSdbOpenInternalServerError creates SdbOpenInternalServerError with default headers values
func NewSdbOpenInternalServerError() *SdbOpenInternalServerError {

	return &SdbOpenInternalServerError{}
}

// WithPayload adds the payload to the sdb open internal server error response
func (o *SdbOpenInternalServerError) WithPayload(payload *models.ServerError) *SdbOpenInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the sdb open internal server error response
func (o *SdbOpenInternalServerError) SetPayload(payload *models.ServerError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SdbOpenInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
